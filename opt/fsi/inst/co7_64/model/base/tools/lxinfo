#!/bin/sh
#
#   get infos an generate info files for fsi
#
#   This program is free software; you can redistribute it and/or modify it under the 
#   terms of the GNU General Public License as published by the Free Software Foundation;
#   either version 3 of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#   See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License along with this program; 
#   if not, see <http://www.gnu.org/licenses/>.
#
ver="1.0.16 - 6.12.2016"
retc=0
export ls="  "
progname=`basename $0`

lxdir="/var/fsi"
lxconf="$lxdir/lxconf.sh"
lxfunc="/usr/bin/lxfunc.sh"

if [ -f $lxfunc ]; then
#   echo Load $lxfunc  
   . $lxfunc
else
   echo Cannot find $lxfunc >/root/lxerror
   exit 99
fi
if [ -f $lxconf ]; then 
#   echo Load $lxconf
   . $lxconf
else
   echo Cannot find $lxconf >/root/lxerror
   exit 99
fi
if [ -z $logfile ]; then 
   logfile="$lxdir/lxinfo.log"
fi

help() {
   echo
   echo " Help for $progname - $ver"    
   echo
   echo " create info files for fsi portal"
   echo
   echo "  Parameter:"
   echo "   -n                 generate new info files"
   echo
   echo "  Optional Parameter:"
   echo "   -q                 quiet mode"
   echo "   -0                 info mode"
   echo "   -1                 debug mode"
   echo "   -2                 trace mode"
   echo "   -l <logfile>       other logfile"
   echo
   echo "  Return Code:"
   echo "    1 = help"
   echo "    2 = no pool "
   echo "    > = different meaning"
   echo
   echo "  Example:"
   echo "    $progname -n"
   echo
}


quietmode=""
go=1

while getopts ":nl:hq012" optname; do
   #tracemsg "Option $optname has value $OPTARG"
   case "$optname" in
      "h")
         help
         exit 1
        ;;
      "q")
         export deb2scr="no"
         quietmode=" -q "
         debmsg " quiet mode"
        ;;
      "0")
         export deb2scr="yes"
         export debug="info"
         quietmode=" -0 "
         debmsg " info mode"
        ;;
      "1")
         export deb2scr="yes"
         export debug="debug"
         quietmode=" -1 "
         debmsg " debug mode"
        ;;
      "2")
         export deb2scr="yes"
         export debug="trace"
         quietmode=" -2 "
         debmsg " trace mode"
        ;;
      "l")
         export logfile="$OPTARG"
         debmsg " log: $logfile"
        ;;
      "n")
         go=0
        ;;
      "?")
        errmsg "Unknown option $OPTARG"
        ;;
      ":")
        errmsg "No argument value for option $OPTARG"
        ;;
      *)
      # Should not occur
        errmsg "Unknown error while processing options"
        ;;
   esac
done

if [ $go -eq 1 ] ; then
   help
   exit 1
fi


infmsg "$ls Start $progname $ver"
mounted=0

tracemsg "$ls  check if fsi srv already mounted"

if [ $retc -eq 0 ]; then
   /usr/bin/lxmount -c
   retc=$?
   if [ $retc -eq 0 ]; then
      tracemsg "$ls  fsi srv mount point found"
   elif [ $retc -eq 1 ]; then
      debmsg "$ls  fsi srv not mounted - try to mount"
      mounted=1
      /usr/bin/lxmount -m
      retc=$?
   else
      errmsg "cannot check fsi srv mountpoint"
   fi
fi   


if [ $retc -eq 0 ]; then
   tracemsg "$ls    ==> fsi srv server: $fsisrv"
   tracemsg "$ls    ==> ks mount point: $kspath"

   lxinfopath=$kspath/log/info
   tracemsg "$ls    ==> info path: $lxinfopath"
   
   if [ ! -d $lxinfopath ]; then
      debmsg "$ls  no $lxinfopath exist - create it"
      mkdir $lxinfopath > /dev/null 2>&1
      retc=$?
      if [ $retc -ne 0 ]; then
         errmsg "cannot create info dir in pool dir [$lxinfopath]"
      fi
   fi
   
fi


if [ $retc -eq 0 ]; then
   # srvinfopath="$lxinfopath/"${HOSTNAME%%.*}
   srvinfopath="$lxinfopath/"${HOSTNAME}
   tracemsg "$ls  server info path: $srvinfopath"
   
   if [ -d $srvinfopath ]; then
      debmsg "$ls  old info path exist - delete it"
      rm -Rf $srvinfopath/* > /dev/null 2>&1
      retc=$?
      if [ $retc -ne 0 ]; then
         errmsg "cannot delete content of $srvinfopath"
      else
         rmdir $srvinfopath  > /dev/null 2>&1
         if [ $retc -ne 0 ]; then
            errmsg "cannot delete content of $srvinfopath"
         fi
      fi
   fi
fi

if [ $retc -eq 0 ]; then
   if [ ! -d $srvinfopath ]; then
      debmsg "$ls  create $srvinfopath ..."
      mkdir $srvinfopath > /dev/null 2>&1
      retc=$?
      if [ $retc -ne 0 ]; then
         errmsg "cannot create server info dir in log dir [$srvinfopath]"
      fi
   fi
fi

if [ $retc -eq 0 ]; then
   tracemsg "$ls  start creating information files on fsi server"

   debmsg "$ls   get nic firmware info"
   lspci | grep -i 'ethernet' >$srvinfopath/nics
      
   debmsg "$ls   get uptime"
   uptime >$srvinfopath/uptime

   debmsg "$ls   get centos version info"
   cat /etc/redhat-release -v >$srvinfopath/version

   debmsg "$ls   get ntp info"
   cat /etc/ntp.conf >$srvinfopath/ntp
   
   debmsg "$ls   get ip config"
   ifconfig >$srvinfopath/ipconfig
   
   debmsg "$ls   get route config"
   ip route show >$srvinfopath/iproute
   
   debmsg "$ls   get disk free info"
   df -T -h | head -1 >$srvinfopath/dfext
   df -T -h | egrep -i "ext|xfs" >>$srvinfopath/dfext
   
   prozent=$(df -h -t ext3 | awk '/sda1/ {print $5}')
   prozent=${prozent//\%}
   echo \<\% dp = $prozent \%\> >$srvinfopath/dfprozent

   df -h -t nfs >>$srvinfopath/dfnfs
   
   debmsg "$ls   get date info"
   date >$srvinfopath/testtime
   
   if [ $lxver -eq 6 ] || [ $lxver -eq 5 ]; then
      debmsg "$ls   get service config status (5/6)"
      chkconfig --list >$srvinfopath/serviceconf
   elif [ $lxver -eq 7 ]; then
      debmsg "$ls   get systemd config status (7)"
      systemctl list-unit-files >$srvinfopath/serviceconf
   else
      echo "unknown redhat version - no service config found" >$srvinfopath/serviceconf
   fi
   
   debmsg "$ls   last shutdown and reboots"
   last -i -d -w -x -R reboot shutdown | head -n -2 >$srvinfopath/boot
  
   if [ -f "$lxdir/fsiinst.log" ]; then
      debmsg "$ls   copy actual install logfile to server"
      cat "$lxdir/fsiinst.log" >$srvinfopath/instlog
   else
      warnmsg "$ls   no $lxdir/fsiinst.log exist ?"
   fi

   debmsg "$ls   get local user"
   awk  -F : '{print $1}' /etc/passwd | sort >$srvinfopath/locusers

   if [ -f /var/fsi/lxconf.sh ]; then
      debmsg "$ls   get lx configs"
      cat /var/fsi/lxconf.sh >>$srvinfopath/lxconf.sh
   else
      warnmsg "$ls   cannot find lxconf.sh on this server"
   fi
   
   if [ $lxver -eq 6 ] || [ $lxver -eq 7 ]; then
      debmsg "$ls   get rsyslog.conf (6/7)"
      if [ -f /etc/rsyslog.conf ]; then
         cat /etc/rsyslog.conf >$srvinfopath/syslog
      else
         cat "no rsyslog.conf found" >$srvinfopath/syslog
      fi
   elif [ $lxver -eq 5 ]; then
      debmsg "$ls   get syslog.conf (5)"
      if [ -f /etc/syslog.conf ]; then
         cat /etc/syslog.conf >$srvinfopath/syslog
      else
         cat "no syslog.conf found" >$srvinfopath/syslog
      fi
   else
      echo "unknown centos version - no syslog config found" >$srvinfopath/syslog
   fi

   printf "%-10s %-10s %-20s %-20s \n" "nic" "driver" "driver version" "firmware" >$srvinfopath/nicsdetail
   # for i in $(ifconfig | awk '/^[a-z]/ {dev=$1; gsub(":", "", dev); print dev}'); do
   # for i in $(ifconfig | awk '/^[a-z]/ {print $1}' | sed 's/ //g'); do 
   for i in $(ip link show | grep -i ": " | awk -F ":" '{print $2}'| tr "," "\n" | sort | sed 's/ //g'); do 
      debmsg "$ls    get nic $i info"
      if [ "$i" == "lo" ]; then
         tracemsg "$ls  loop interface not needed"
      else
         nicdetail=$(ethtool -i $i)
         tracemsg "$ls   $nicdetail"
         driver=$(echo $nicdetail | sed -e 's/^.*driver: \([^ ,]*\).*$/\1/')
         tracemsg "$ls   driver: $driver"
         driverver=$(echo $nicdetail | sed -e 's/^.* version: \([^ ,]*\).*$/\1/')
         tracemsg "$ls   driver version $driverver"
         firmware=$(echo $nicdetail | sed -e 's/^.*firmware-version: \([^,]*\).*bus-info:.*$/\1/')
         tracemsg "$ls   firmware: $firmware"      
         printf "%-10s %-10s %-20s %-20s \n" $i "$driver" "$driverver" "$firmware" >>$srvinfopath/nicsdetail
         tracemsg "$ls   $i $driver $driverver $firmware"
      fi
   done 

   debmsg "$ls  probe for new updates ..."
   yum update --assumeno >$srvinfopath/yumupd
   
fi
  

if [ $mounted -eq 1 ]; then
   infmsg "$ls  fsi srv was not mounted at start - unmount now"
   /usr/bin/lxmount -u
   retc=$?
else
   debmsg "$ls  fsi srv was mounted at start - leave it"
fi
   

infmsg "$ls End $progname $ver - rc=$retc"
exit $retc
   

